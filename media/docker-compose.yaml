version: '3.8'

x-common-environment-variables: &common-environment-variables
  TZ: Australia/Brisbane
  PUID: 1000
  PGID: 1000

services:
  sabnzbd:
    container_name: sabnzbd
    image: lscr.io/linuxserver/sabnzbd:latest
    environment:
      <<: *common-environment-variables
    volumes:
      - /mnt/wsl/ssd/docker-volumes/media/sabnzbd/config:/config
      - /mnt/wsl/hdd/docker-volumes/media:/media
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.sabnzbd.entrypoints: https
      traefik.http.routers.sabnzbd.rule: Host(`sabnzbd.${DOMAIN_NAME}`)
      traefik.http.services.sabnzbd.loadbalancer.server.port: 8080
  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    environment:
      <<: *common-environment-variables
    volumes:
      - /mnt/wsl/ssd/docker-volumes/media/prowlarr/config:/config
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.prowlarr.entrypoints: https
      traefik.http.routers.prowlarr.rule: Host(`prowlarr.${DOMAIN_NAME}`)
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696
  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    environment:
      <<: *common-environment-variables
    volumes:
      - /mnt/wsl/ssd/docker-volumes/media/sonarr/config:/config
      - /mnt/wsl/hdd/docker-volumes/media:/media
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.sonarr.entrypoints: https
      traefik.http.routers.sonarr.rule: Host(`sonarr.${DOMAIN_NAME}`)
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    environment:
      <<: *common-environment-variables
    volumes:
      - /mnt/wsl/ssd/docker-volumes/media/radarr/config:/config
      - /mnt/wsl/hdd/docker-volumes/media:/media
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.radarr.entrypoints: https
      traefik.http.routers.radarr.rule: Host(`radarr.${DOMAIN_NAME}`)
      traefik.http.services.radarr.loadbalancer.server.port: 7878
  plex:
    container_name: plex
    image: plexinc/pms-docker:latest
    environment:
      <<: *common-environment-variables
      PLEX_UID: 1000
      PLEX_GID: 1000
    ports: # https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
      - 32400:32400/tcp  # Plex Media Server
      - 32469:32469/tcp  # Plex DLNA Server
      - 1900:1900/udp    # Plex DLNA Server
      - 32410:32410/udp  # Plex GDM Network Discovery
      - 32412:32412/udp  # Plex GDM Network Discovery
      - 32413:32413/udp  # Plex GDM Network Discovery
      - 32414:32414/udp  # Plex GDM Network Discovery
    volumes:
      - /mnt/wsl/ssd/docker-volumes/media/plex/config:/config
      - /mnt/wsl/ssd/docker-volumes/media/plex/transcode:/transcode
      - /mnt/wsl/hdd/docker-volumes/media:/media
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.plex.entrypoints: https
      traefik.http.routers.plex.rule: Host(`plex.${DOMAIN_NAME}`)
      traefik.http.services.plex.loadbalancer.server.port: 32400
  overseerr:
    container_name: overseerr
    image: lscr.io/linuxserver/overseerr:latest
    environment:
      <<: *common-environment-variables
    volumes:
      - /mnt/wsl/ssd/docker-volumes/media/overseerr/config:/config
      - /mnt/wsl/hdd/docker-volumes/media:/media
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.overseerr.entrypoints: https
      traefik.http.routers.overseerr.rule: Host(`overseerr.${DOMAIN_NAME}`)
      traefik.http.services.overseerr.loadbalancer.server.port: 5055

networks:
  traefik:
    name: traefik
    external: true
