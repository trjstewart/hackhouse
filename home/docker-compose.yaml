version: '3.8'

x-common-environment-variables: &common-environment-variables
  TZ: Australia/Brisbane
  PUID: 1000
  PGID: 1000

services:
  cloudflare-tunnel:
    container_name: cloudflare-tunnel
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel run
    environment:
      TUNNEL_TOKEN: ${CLOUDFLARE_TUNNEL_TOKEN:?}
      TUNNEL_METRICS: 0.0.0.0:3333
      TUNNEL_LOGLEVEL: debug
    networks:
      - cloudflare
  traefik:
    container_name: traefik
    image: traefik:latest
    command:
      - --log.level=DEBUG
      - --accesslog=true
      - --api=true
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls=true
      - --entrypoints.https.http.tls.certresolver=letsencrypt
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL_ADDRESS}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.keytype=EC384
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --providers.docker
      - --providers.docker.exposedbydefault=false
    volumes:
      - "/mnt/ssd/docker-volumes/home/traefik/letsencrypt:/letsencrypt"
      - /var/run/docker.sock:/var/run/docker.sock:ro # TODO: This should be provided by a read-only docker proxy container
    environment:
      <<: *common-environment-variables
      CF_ZONE_API_TOKEN: ${CLOUDFLARE_API_TOKEN_TRAEFIK_ZONE_READ:?}
      CF_DNS_API_TOKEN: ${CLOUDFLARE_API_TOKEN_TRAEFIK_DNS_WRITE:?}
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN_NAME}`)
      traefik.http.routers.traefik.service: api@internal
    networks:
      - cloudflare
      - traefik
      - plex
  whoami:
    container_name: whoami
    image: traefik/whoami:latest
    command: --verbose
    labels:
      traefik.enable: true
      traefik.http.routers.whoami.entrypoints: https
      traefik.http.routers.whoami.rule: Host(`whoami.${DOMAIN_NAME}`)
    networks:
      - traefik
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # TODO: This should be provided by a read-only docker proxy container
      - /mnt/ssd/docker-volumes/home/homarr/configs:/app/data/configs
      - /mnt/ssd/docker-volumes/home/homarr/icons:/app/public/icons
      - /mnt/ssd/docker-volumes/home/homarr/data:/data
    environment:
      <<: *common-environment-variables
      DISABLE_ANALYTICS: true
      BASE_URL: media.${DOMAIN_NAME}
    labels:
      traefik.enable: true
      traefik.http.routers.media.entrypoints: https
      traefik.http.routers.media.rule: Host(`media.${DOMAIN_NAME}`)
      traefik.http.services.media.loadbalancer.server.port: 7575
    networks:
      - traefik
      - plex

networks:
  cloudflare:
    name: cloudflare
    driver: bridge
  traefik:
    name: traefik
    driver: bridge
  plex: # TODO: Move this to be created with the media stack
    name: plex
    driver: bridge
