version: '3.8'

x-common-environment-variables: &common-environment-variables
  TZ: Australia/Brisbane
  PUID: 1000
  PGID: 1000

services:
  cloudflare-tunnel:
    container_name: cloudflare-tunnel
    image: cloudflare/cloudflared:latest
    command: tunnel run
    environment:
      TUNNEL_TOKEN: ${CLOUDFLARE_TUNNEL_TOKEN:?}
      TUNNEL_METRICS: 0.0.0.0:3333
      TUNNEL_LOGLEVEL: debug
    networks:
      - cloudflare
  docker-socket-proxy-read-only:
    container_name: docker-socket-proxy-read-only
    image: tecnativa/docker-socket-proxy:latest
    privileged: true
    environment:
      - POST=0 # Ensure we don't allow write access to the socket
      - CONTAINERS=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - docker-socket-proxy-read-only
  traefik:
    container_name: traefik
    image: traefik:latest
    command:
      - --log.level=DEBUG
      - --accesslog=true
      - --api=true
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls=true
      - --entrypoints.https.http.tls.certresolver=letsencrypt
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL_ADDRESS}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.keytype=EC384
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.endpoint=tcp://docker-socket-proxy-read-only:2375
    volumes:
      - "/mnt/ssd/docker-volumes/home/traefik/letsencrypt:/letsencrypt"
    environment:
      <<: *common-environment-variables
      CF_ZONE_API_TOKEN: ${CLOUDFLARE_API_TOKEN_TRAEFIK_ZONE_READ:?}
      CF_DNS_API_TOKEN: ${CLOUDFLARE_API_TOKEN_TRAEFIK_DNS_WRITE:?}
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN_NAME}`)
      traefik.http.routers.traefik.service: api@internal
    networks:
      - traefik
      - docker-socket-proxy-read-only
      - cloudflare
  whoami:
    container_name: whoami
    image: traefik/whoami:latest
    command: --verbose
    labels:
      traefik.enable: true
      traefik.http.routers.whoami.entrypoints: https
      traefik.http.routers.whoami.rule: Host(`whoami.${DOMAIN_NAME}`)
    networks:
      - traefik

networks:
  cloudflare:
    name: cloudflare
    driver: bridge
  docker-socket-proxy-read-only:
    name: docker-socket-proxy-read-only
    driver: bridge
  traefik:
    name: traefik
    driver: bridge
